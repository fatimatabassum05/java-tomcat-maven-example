pipeline {
    agent { label 'master' }  // Change this based on your Jenkins setup
    environment {
        AWS_REGION = 'ap-south-1'  // Your AWS region
        ECR_REPO_NAME = 'jenkins-docker'  // Replace with your ECR repository name
        ECR_REGISTRY = '654654623396.dkr.ecr.ap-south-1.amazonaws.com'  // Replace with your ECR registry URL
        IMAGE_TAG = "${BUILD_NUMBER}"
        AWS_CREDENTIALS_ID = 'eks1'  // ID of your AWS credentials in Jenkins
    }
    stages {
        stage('Git Checkout Stage') {
            steps {
                git branch: 'master', url: 'https://github.com/sindhukampli/java-tomcat-maven-example.git'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${ECR_REGISTRY}/${ECR_REPO_NAME}:${IMAGE_TAG} ."
                }
            }
        }
        stage('Push to ECR') {
            steps {
                script {
                    withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', 
                                         credentialsId: "${AWS_CREDENTIALS_ID}", 
                                         secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                        
                        // Log in to Amazon ECR
                        sh """
                            aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REGISTRY}
                        """
                        
                        // Push the Docker image to ECR
                        sh "docker push ${ECR_REGISTRY}/${ECR_REPO_NAME}:${IMAGE_TAG}"
                    }
                }
            }
        }
    }
    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
